@import url('https://fonts.googleapis.com/css?family=Poppins:400,500,600,700&display=swap');
*{
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-family: 'Poppins', sans-serif;
}
// html,body{
//   display: grid;
//   height: 100%;
//   place-items: center;
//   background: #000;
//   overflow: hidden;
// }
.card{
    margin-top: -170px;
    margin-left: 20px;
    
}

button {
    position: relative;
    height: 60px;
    width: 400px;
    margin: 0 35px;
    border-radius: 50px;
    border: none;
    outline: none;
    background: #111;
    color: #fff;
    font-size: 20px;
    font-weight: 500;
    letter-spacing: 2px;
    text-transform: uppercase;
    cursor: pointer;
    transition: background 0.5s;
    margin-top: 140px;
    margin-left: 1100px;
}
button:first-child{
  background: linear-gradient(90deg, #03a9f4, #f441a5, #3b80ff, #03a9f4);
  background-size: 400%;
}
button:last-child{
  background: linear-gradient(90deg, #fa7199, #6c62f5, #7703e4, #fa7199);
  background-size: 400%;
}
button:first-child:before,
button:last-child:before{
  content: '';
  position: absolute;
  background: inherit;
  top: -5px;
  right: -5px;
  bottom: -5px;
  left: -5px;
  border-radius: 50px;
  filter: blur(20px);
  opacity: 0;
  transition: opacity 0.5s;
}
button:first-child:before,
button:last-child:before{
  opacity: 1;
  z-index: -1;
}
button{
  z-index: 1;
  animation: glow 8s linear infinite;
}
@keyframes glow {
  0%{
    background-position: 0%;
  }
  100%{
    background-position: 400%;
  }
}

.card-text:last-child {
    margin-bottom: 0;
    width: 580px;
    text-align: justify;
}
#neon {
    color: rgb(231, 143, 84);
    font-family: cursive;
    text-shadow:
      0 0 5px rgb(167, 78, 26),
      0 0 10px rgb(185, 74, 9),
      0 0 20px rgb(251, 255, 0),
      0 0 40px rgb(251, 255, 0),
      0 0 80px rgb(251, 255, 0),
      0 0 90px rgb(251, 255, 0),
      0 0 100px rgb(251, 255, 0),
      0 0 150px rgb(251, 255, 0);
  }
  #ne{
    color: rgba(255, 255, 255, 0.829);
 
  }
  

  //title

  @font-face {
  font-family: Clip;
  src: url("https://acupoftee.github.io/fonts/Clip.ttf");
}

body {
  background-color: #141114;
  background-image: linear-gradient(335deg, black 23px, transparent 23px),
    linear-gradient(155deg, black 23px, transparent 23px),
    linear-gradient(335deg, black 23px, transparent 23px),
    linear-gradient(155deg, black 23px, transparent 23px);
  background-size: 58px 58px;
  background-position: 0px 2px, 4px 35px, 29px 31px, 34px 6px;
}

.sign {
  position: absolute;
  display: flex;
  justify-content: center;
  align-items: center;
  width: 50%;
  height: 50%;
  background-image: radial-gradient(
    ellipse 50% 35% at 50% 50%,
    #6b1839,
    transparent
  );
  transform: translate(-50%, -50%);
  letter-spacing: 2;
  left: 50%;
  top: 50%;
  font-family: "Clip";
  text-transform: uppercase;
  font-size: 6em;
  color: #ffe6ff;
  text-shadow: 0 0 0.6rem #ffe6ff, 0 0 1.5rem #5aa9e9,
    -0.2rem 0.1rem 1rem #5aa9e9, 0.2rem 0.1rem 1rem #5aa9e9,
    0 -0.5rem 2rem #3a24ff, 0 0.5rem 3rem #3a24ff;
  animation: shine 2s forwards, flicker 3s infinite;
}

@keyframes blink {
  0%,
  22%,
  36%,
  75% {
    color: #ffe6ff;
    text-shadow: 0 0 0.6rem #ffe6ff, 0 0 1.5rem #5aa9e9,
      -0.2rem 0.1rem 1rem #5aa9e9, 0.2rem 0.1rem 1rem #5aa9e9,
      0 -0.5rem 2rem #3a24ff, 0 0.5rem 3rem #3a24ff;
  }
  28%,
  33% {
    color: #5aa9e9;
    text-shadow: none;
  }
  82%,
  97% {
    color: #3a24ff;
    text-shadow: none;
  }
}

.flicker {
  animation: shine 2s forwards, blink 3s 2s infinite;
}

.fast-flicker {
  animation: shine 2s forwards, blink 10s 1s infinite;
}

@keyframes shine {
  0% {
    color: #6b1839;
    text-shadow: none;
  }
  100% {
    color: #ffe6ff;
    text-shadow: 0 0 0.6rem #ffe6ff, 0 0 1.5rem #5aa9e9,
      -0.2rem 0.1rem 1rem #5aa9e9, 0.2rem 0.1rem 1rem #5aa9e9,
      0 -0.5rem 2rem #3a24ff, 0 0.5rem 3rem #3a24ff;
  }
}

@keyframes flicker {
  from {
    opacity: 1;
  }

  4% {
    opacity: 0.9;
  }

  6% {
    opacity: 0.85;
  }

  8% {
    opacity: 0.95;
  }

  10% {
    opacity: 0.9;
  }

  11% {
    opacity: 0.922;
  }

  12% {
    opacity: 0.9;
  }

  14% {
    opacity: 0.95;
  }

  16% {
    opacity: 0.98;
  }

  17% {
    opacity: 0.9;
  }

  19% {
    opacity: 0.93;
  }

  20% {
    opacity: 0.99;
  }

  24% {
    opacity: 1;
  }

  26% {
    opacity: 0.94;
  }

  28% {
    opacity: 0.98;
  }

  37% {
    opacity: 0.93;
  }

  38% {
    opacity: 0.5;
  }

  39% {
    opacity: 0.96;
  }

  42% {
    opacity: 1;
  }

  44% {
    opacity: 0.97;
  }

  46% {
    opacity: 0.94;
  }

  56% {
    opacity: 0.9;
  }

  58% {
    opacity: 0.9;
  }

  60% {
    opacity: 0.99;
  }

  68% {
    opacity: 1;
  }

  70% {
    opacity: 0.9;
  }

  72% {
    opacity: 0.95;
  }

  93% {
    opacity: 0.93;
  }

  95% {
    opacity: 0.95;
  }

  97% {
    opacity: 0.93;
  }

  to {
    opacity: 1;
  }
}

  


// Love dynamically typed text? You're gonna love this
// Edit these strings to see them typed on the screen:
$strings: (
  "Are you a driver?"
  "Submit the free spaces for your car on Carpooling app."
  "Are you a passenger?"
  "Use Carpooling app to find drivers on your route."
	
);

// now for some timing (in seconds)
$durCharFwd: 0.10; // character typed
$durFullGap: 2.00; // time between typed/delete
$durCharBwd: 0.08; // character deleted
$durDoneGap: 1.00; // time between strings

// initializing some variables and functions ✊🏼
$charCount: 0; $durTotal: 0;
@each $string in $strings {
	$charCount: $charCount + str-length($string);
	$durTotal: $durTotal
		+ (str-length($string) * ($durCharFwd + $durCharBwd))
		+ $durFullGap + $durDoneGap;
}
@function percent($string, $letter, $modifier) {
	$stringsPast: $string - 1; $time: 0;
	@while $stringsPast > 0 {
		$time: $time
			+ (($durCharFwd + $durCharBwd) * (str-length(nth($strings, $stringsPast))))
			+ $durFullGap + $durDoneGap;
		$stringsPast: $stringsPast - 1;
	}
	@if $letter <= str-length(nth($strings, $string)) {
		$time: $time
			+ ($durCharFwd * ($letter - 1));
	} @else {
		$time: $time
			+ ($durCharFwd * str-length(nth($strings, $string)))
			+ $durFullGap
			+ ($durCharBwd * ($letter - str-length(nth($strings, $string))));
	}
	@return ($time / $durTotal * 100 + $modifier) + "%";
}
$currentPercentage: 0;
// now THIS is where the magic happens... ✨
@keyframes typed {
	@for $i from 1 through length($strings) {
		// @for $j from 1 through (str-length(nth($strings, $i)) * 2 - 1) {
		@for $j from 1 through (str-length(nth($strings, $i)) * 2) {
			/* string #{$i}, char #{$j} */
			@if $j < str-length(nth($strings, $i)) * 2 { // not last character deleted
				#{percent($i, $j, 0)}, #{percent($i, $j+1, -0.001)} {
					@if $j <= str-length(nth($strings, $i)) {
						content: quote(#{str_slice(nth($strings, $i), 1, $j)});
					} @else {
						content: quote(#{str_slice(nth($strings, $i), 1, str-length(nth($strings, $i)) - ($j - str-length(nth($strings, $i))))});
					}
				}
			} @else {
				@if $i < length($strings) { // not last string
					#{percent($i, $j, 0)}, #{percent($i+1, 1, -0.001)} {
						content: "​"; // zero-width space to retain element height
					}
				} @else { // last string
					#{percent($i, $j, 0)}, 100% {
						content: "​"; // zero-width space to retain element height
					}
				}
			}
		}
	}
}
@keyframes beam-blink {
	75% { border-color: transparent; }
}
* { backface-visibility: hidden; }
.text {
	// display: flex;
	// align-items: center;
	justify-content: center;
	font-size: calc(10px + 2vw);
	font-family: 'VT323', monospace, sans-serif;
	color: rgb(171, 229, 233); // hacker green
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
	&::after {
		content: "​"; // zero-width space to retain element height
		position: relative;
		top: -13px;
		@media (max-width: 575px) { top: -33px; }
		display: inline-block;
		padding-right: 3px;
		padding-right: calc(3px + 0.1vw);
		border-right: 5px solid rgba(rgb(51, 255, 228), 0.75);
		border-right: calc(1.1vw + 4px) solid rgba(rgb(51, 255, 238), 0.75);
		text-shadow: 0 0 5px rgba(193, 236, 233, 0.75);
		white-space: nowrap;
		animation: typed #{$durTotal + "s"} linear 1s infinite, beam-blink 1s infinite;
	}
	&::before { 
		@media (max-width: 575px) {
			content: "#{length($strings)} strings \A #{$charCount} chars \A #{$durTotal}s duration";
		}
		display: block;
		position: absolute;
		margin-top: 200px;
		width: 100%;
		padding: 3px 0;
		background: #00f; // aquaman blue
		color: #fff; // Brandon-McConnell white
		text-align: center;
		font-size: 18px;
		letter-spacing: 0.2px;
		white-space: pre-wrap;
	}
}
